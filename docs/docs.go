// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "fiber@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "获取后端运行状态",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "基础"
                ],
                "summary": "主页状态",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.CommonResponse"
                        }
                    }
                }
            }
        },
        "/ai/chat": {
            "post": {
                "description": "与 AI 进行对话",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI"
                ],
                "summary": "AI 聊天",
                "parameters": [
                    {
                        "description": "请求体",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.AiChatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.AiChatResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/ai/search": {
            "post": {
                "description": "使用 AI 进行搜索",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI"
                ],
                "summary": "AI 搜索",
                "parameters": [
                    {
                        "description": "请求体",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/functions.AiSearchPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.AiSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/functions/md-to-pic": {
            "post": {
                "description": "将 Markdown 内容渲染为图片",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "工具"
                ],
                "summary": "Markdown 转图片",
                "parameters": [
                    {
                        "description": "请求体",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.MarkdownToPicRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.MarkdownToPicResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/functions/random-pic/{folder}": {
            "get": {
                "description": "从指定文件夹随机返回一张图片",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "工具"
                ],
                "summary": "随机图片",
                "parameters": [
                    {
                        "type": "string",
                        "description": "文件夹名称",
                        "name": "folder",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/otoge/chunithm/allsong": {
            "get": {
                "description": "获取 CHUNITHM 所有歌曲信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "音游"
                ],
                "summary": "获取所有 CHUNITHM 歌曲",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.ChunithmAllSongResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/otoge/chunithm/cover/{id}": {
            "get": {
                "description": "通过 ID 获取 CHUNITHM 歌曲封面图片",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "音游"
                ],
                "summary": "获取 CHUNITHM 歌曲封面",
                "parameters": [
                    {
                        "type": "string",
                        "description": "歌曲ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/otoge/chunithm/song/{id}": {
            "get": {
                "description": "通过 ID 获取 CHUNITHM 歌曲信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "音游"
                ],
                "summary": "获取指定 ID 的 CHUNITHM 歌曲",
                "parameters": [
                    {
                        "type": "string",
                        "description": "歌曲ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.ChunithmSongResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/otoge/malody/info/{id}": {
            "get": {
                "description": "通过 ID 获取 Malody 用户信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "音游"
                ],
                "summary": "获取 Malody 用户信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "用户ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/otoge/malody/recent/{id}": {
            "get": {
                "description": "通过 ID 获取 Malody 用户最近游玩记录",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "音游"
                ],
                "summary": "获取 Malody 用户最近游玩记录",
                "parameters": [
                    {
                        "type": "string",
                        "description": "用户ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/status": {
            "get": {
                "description": "检查后端服务状态",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "基础"
                ],
                "summary": "服务健康检查",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.StatusResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "functions.AiSearchPayload": {
            "type": "object",
            "properties": {
                "chatModel": {
                    "$ref": "#/definitions/functions.ChatModel"
                },
                "focusMode": {
                    "type": "string"
                },
                "optimizationMode": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "systemInstructions": {
                    "type": "string"
                }
            }
        },
        "functions.ChatModel": {
            "type": "object",
            "properties": {
                "customOpenAIBaseURL": {
                    "type": "string"
                },
                "customOpenAIKey": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                }
            }
        },
        "main.AiChatRequest": {
            "description": "AI 聊天请求体",
            "type": "object",
            "properties": {
                "model_name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            }
        },
        "main.AiChatResponse": {
            "description": "AI 聊天响应体",
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                }
            }
        },
        "main.AiSearchResponse": {
            "description": "AI 搜索响应体",
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                }
            }
        },
        "main.ChunithmAllSongResponse": {
            "description": "CHUNITHM 全部歌曲响应体",
            "type": "object",
            "properties": {
                "songs": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "main.ChunithmSongResponse": {
            "description": "CHUNITHM 单曲响应体",
            "type": "object",
            "properties": {
                "song": {}
            }
        },
        "main.CommonResponse": {
            "description": "通用响应体",
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "main.MarkdownToPicRequest": {
            "description": "Markdown转图片请求体",
            "type": "object",
            "properties": {
                "markdown": {
                    "type": "string"
                }
            }
        },
        "main.MarkdownToPicResponse": {
            "description": "Markdown转图片响应体",
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "main.StatusResponse": {
            "description": "状态响应体",
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "CongMiaoBot 后端 API",
	Description:      "这是一个基于 Fiber 的后端 API 示例，包含 AI、音游、Markdown 转图片等功能。",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
